---
- name: prometheus.yml.j2 exists on local machine
  ansible.builtin.stat:
    path: "{{ prometheus_config_src_dir }}/prometheus.yml.j2"
  register: is_prometheus_file
  delegate_to: localhost

- name: Copy prometheus.yml file
  ansible.builtin.template:
    src: "{{ prometheus_config_src_dir }}/prometheus.yml.j2"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0644
  when: is_prometheus_file.stat.exists
  notify:
    - Reload prometheus

- name: Rules folder exists on local machine
  ansible.builtin.stat:
    path: "{{ prometheus_rules_src_dir }}"
  register: is_rules_folder
  delegate_to: localhost

- name: Copy *.rules file
  ansible.builtin.copy:
    src: "{{ prometheus_rules_src_dir }}/{{ item.name }}"
    dest: "{{ prometheus_rules_dir }}/{{ item.name }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0644
  with_items: "{{ alert_file }}"
  when: is_rules_folder.stat.exists
  register: copy_result
  notify:
    - Reload prometheus

- name: Stop prometheus service on docker container
  ansible.builtin.command: "pkill -f {{ prometheus_bin_dir }}/prometheus"
  ignore_errors: true
  when:
    - copy_result.changed
    - virtualization_type | default(ansible_virtualization_type) in [ 'docker', 'container' ]

- name: Start prometheus service on docker container
  ansible.builtin.command: "{{ prometheus_bin_dir }}/prometheus {% for flag, flag_value in prometheus_config_flags.items() %}{% if flag_value != '' %} --{{ flag }}={{ flag_value }}{% else %} --{{ flag }}{% endif %}{% endfor %}{% for flag, flag_value in prometheus_config_flags_extra.items() %}{% if flag_value != '' %} --{{ flag }}={{ flag_value }}{% else %} --{{ flag }}{% endif %}{% endfor %}"
  async: 3000
  poll: 0
  when:
    - copy_result.changed
    - virtualization_type | default(ansible_virtualization_type) in [ 'docker', 'container' ]
