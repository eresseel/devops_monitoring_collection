---
- name: Install needed packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - curl
    - tar
    - bzip2

- name: Create prometheus system group
  ansible.builtin.group:
    name: "{{ prometheus_node_exporter_group }}"
    system: yes
    state: present

- name: Create prometheus system user
  ansible.builtin.user:
    name: "{{ prometheus_node_exporter_user }}"
    system: yes
    shell: "/sbin/nologin"
    group: "{{ prometheus_node_exporter_group }}"
    createhome: no

- name: Create prometheus directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_node_exporter_user }}"
    group: "{{ prometheus_node_exporter_group }}"
    mode: 0755
  with_items:
    - "{{ prometheus_node_exporter_root_dir }}"
    - "{{ prometheus_node_exporter_dist_dir }}"
    - "{{ prometheus_node_exporter_log_dir }}"
    - "{{ prometheus_node_exporter_conf_dir }}"
    - "{{ prometheus_node_exporter_textfile_scripts }}"
    - "{{ prometheus_node_exporter_textfile_output }}"

- name: Download prometheus node exporter binary locally
  become: no
  local_action:
    module: get_url
    url: "{{ url }}"
    dest: "/tmp/{{ prometheus_node_exporter_release_name }}.tar.gz"

- name: Transfer local node exporter binary
  ansible.builtin.copy:
    src: "/tmp/{{ prometheus_node_exporter_release_name }}.tar.gz"
    dest: "{{ prometheus_node_exporter_dist_dir }}/{{ prometheus_node_exporter_release_name }}.tar.gz"
    owner: "{{ prometheus_node_exporter_user}}"
    group: "{{ prometheus_node_exporter_group }}"
    mode: '0755'

- name: Unarchive binary tarball
  ansible.builtin.unarchive:
    copy: no
    src: "{{ prometheus_node_exporter_dist_dir }}/{{ prometheus_node_exporter_release_name }}.tar.gz"
    dest: "{{ prometheus_node_exporter_dist_dir }}"
    creates: "{{ prometheus_node_exporter_dist_dir }}/{{ prometheus_node_exporter_release_name }}/node_exporter"
  register: prometheus_node_exporter_updated
  notify:
    - Restart node exporter

- name: Update group and owner for files
  ansible.builtin.file:
    path: "{{ prometheus_node_exporter_dist_dir }}/{{ prometheus_node_exporter_release_name }}"
    state: directory
    recurse: yes
    owner: "{{ prometheus_node_exporter_user}}"
    group: "{{ prometheus_node_exporter_group }}"
  when: prometheus_node_exporter_updated is changed

- name: Create symlink to the current release
  ansible.builtin.file:
    src: "{{ prometheus_node_exporter_dist_dir }}/{{ prometheus_node_exporter_release_name }}"
    path: "{{ prometheus_node_exporter_root_dir }}/node_exporter_current"
    state: link

- name: Create systemd service unit
  ansible.builtin.template:
    src: etc/systemd/system/prometheus-node-exporter.service.j2
    dest: /etc/systemd/system/prometheus-node-exporter.service
    owner: root
    group: root
    mode: 0644
  when: service_mgr | default(ansible_service_mgr) == 'systemd'
  notify:
    - Reenable node exporter service
    - Restart node exporter

- name: Looking which version of upstart is install
  ansible.builtin.command: initctl version
  when: service_mgr | default(ansible_service_mgr) == 'upstart'
  register: upstart_version
  changed_when: false

- name: Create init service unit
  ansible.builtin.template:
    src: etc/init/prometheus-node-exporter.conf.j2
    dest: /etc/init/prometheus-node-exporter.conf
    owner: root
    group: root
    mode: 0644
  when: service_mgr | default(ansible_service_mgr) == 'upstart'
  notify:
    - Reinit node exporter
    - Restart node exporter

- name: Create sysvinit service unit
  ansible.builtin.template:
    src: etc/init.d/prometheus-node-exporter.j2
    dest: /etc/init.d/prometheus-node-exporter
    owner: root
    group: root
    mode: 0755
  when: service_mgr | default(ansible_service_mgr) in [ 'sysvinit', 'service' ]
  notify:
    - Restart node exporter

- name: Create prometheus-node-exporter.pid file
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: root
    group: root
    state: "{{ item.state }}"
    mode: 0755
  when: service_mgr | default(ansible_service_mgr) in [ 'openrc' ]
  with_items:
    - {path: '/run/prometheus-node-exporter/', state: 'directory'}
    - {path: '/run/prometheus-node-exporter/prometheus-node-exporter.pid', state: 'touch'}

- name: Create openrc service unit
  ansible.builtin.template:
    src: etc/open.rc/prometheus-node-exporter.j2
    dest: /etc/init.d/prometheus-node-exporter
    owner: root
    group: root
    mode: 0755
  when: service_mgr | default(ansible_service_mgr) in [ 'openrc' ]
  notify:
    - Restart node exporter

- meta: flush_handlers

- name: Start node exporter service on docker container
  ansible.builtin.command: "{{ prometheus_node_exporter_root_dir }}/node_exporter_current/node_exporter {% for collector in prometheus_node_exporter_enabled_collectors %}--collector.{{ collector }} {% endfor %} {% for collector in prometheus_node_exporter_disabled_collectors %}--no-collector.{{ collector }} {% endfor %} {% for flag, flag_value in prometheus_node_exporter_config_flags.items() %}--{{ flag }}={{ flag_value }} {% endfor %}"
  async: 3000
  poll: 0
  when: virtualization_type | default(ansible_virtualization_type) in [ 'docker', 'container' ]

- name: Ensure prometheus node exporter service is enabled and started
  ansible.builtin.service:
    name: prometheus-node-exporter
    state: restarted
    enabled: yes
  when: virtualization_type | default(ansible_virtualization_type) not in [ 'docker', 'container' ]
